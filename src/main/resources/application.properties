server.port=9090

server.servlet.context-path=/

project.version=@project.version@
springdoc.api-docs.path=/api-docs

spring.datasource.url=jdbc:postgresql://${DB_HOST}/${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl.auto=update

aws.cognito.userPoolId=us-east-1_edAonTQSm
aws.cognito.clientId=27uhjlech7ai3qocvfi3p5v1k0
aws.cognito.clientSecret=tfao4tlqm4kneeu1k03ed7g9ekv5kai81t3dvg07gv57gu6q062
aws.cognito.region=US-EAST-1
aws.cognito.url=https://accounts-motur.auth.us-east-1.amazoncognito.com



spring.security.oauth2.client.provider.cognito.user-name-attribute=cognito:username
spring.security.oauth2.client.registration.cognito.clientId=27uhjlech7ai3qocvfi3p5v1k0
spring.security.oauth2.client.registration.cognito.clientName=motur-login
spring.security.oauth2.client.registration.cognito.clientSecret=tfao4tlqm4kneeu1k03ed7g9ekv5kai81t3dvg07gv57gu6q062
spring.security.oauth2.client.registration.cognito.redirect-uri=http://localhost:9090/v1/login/oauth2/code/cognito
spring.security.oauth2.client.registration.cognito.scope=openid

keycloak.realm=motur
keycloak.resource=login
keycloak.auth-server-url=http://localhost:8080/auth
keycloak.ssl-required=external
keycloak.credentials.secret=client_secret

keycloak.security-constraints[0].authRoles[0]=role1
keycloak.security-constraints[0].securityCollections[0].patterns[0]=/protected/*

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/auth/realms/SeuRealm