#aws:
#    cognito:
#        clientId: 27uhjlech7ai3qocvfi3p5v1k0
#        clientSecret: tfao4tlqm4kneeu1k03ed7g9ekv5kai81t3dvg07gv57gu6q062
#        region: US-EAST-1
#        url: https://accounts-motur.auth.us-east-1.amazoncognito.com
#        userPoolId: us-east-1_edAonTQSm

keycloak:
    auth-server-url: http://localhost:8080/realms/motur/protocol/openid-connect/token
    credentials:
        secret: ik2NsiG4ukAA5Gbtk6cFF3fsrBC2xQI4
    realm: motur
    resource: login
    security-constraints:
    -   authRoles:
        - role1
        securityCollections:
        -   patterns:
            - /protected/*
    ssl-required: external
    use-resource-role-mappings: true
    autodetect-bearer-only: true
project:
    version: '@project.version@'
server:
    port: 9090
    servlet:
        context-path: /
spring:
    application:
        name: motur-config
    profiles:
        active: "@activatedProperties@"
    cache:
        type: redis

    datasource:
        password: ${DB_PASS}
        url: jdbc:postgresql://${DB_HOST}/${DB_NAME}
        username: ${DB_USER}
    jpa:
        hibernate:
            ddl:
                auto: update
            ddl-auto: update
            #dialect: org.hibernate.dialect.PostgreSQLDialect
        properties:
            hibernate:
                format_sql: true

        show-sql: false
    security:
        oauth2:
            client:
#                provider:
#                    cognito:
#                        user-name-attribute: cognito:username
                registration:
#                    cognito:
#                        clientId: 27uhjlech7ai3qocvfi3p5v1k0
#                        clientName: motur-login
#                        clientSecret: tfao4tlqm4kneeu1k03ed7g9ekv5kai81t3dvg07gv57gu6q062
#                        authorization-grant-type: authorization_code
#                        redirect-uri: http://localhost:9090/v1/login/oauth2/code/cognito
#                        scope: openid
                    keycloak:
                        client-id: login
                        client-secret: ik2NsiG4ukAA5Gbtk6cFF3fsrBC2xQI4
                        authorization-grant-type: password
                        redirect-uri: http://localhost:9090/login/oauth2/code/keycloak
                        scope: openid
                        provider: keycloak
                provider:
                    keycloak:
                        issuer-uri: http://localhost:8080/realms/motur
                        authorization-uri: http://localhost:8080/realms/motur/protocol/openid-connect/auth
                        token-uri: http://localhost:8080/realms/motur/protocol/openid-connect/token
                        user-info-uri: http://localhost:8080/realms/motur/protocol/openid-connect/userinfo
                        jwk-set-uri: http://localhost:8080/realms/motur/protocol/openid-connect/certs
                        user-name-attribute: email

            resourceserver:
                jwt:
                    issuer-uri: http://localhost:8080/realms/motur
    data:
        redis:
            host: ${REDIS_HOST}
            port: ${REDIS_PORT}
springdoc:
    api-docs:
        path: /api-docs

    swagger-ui:
        protocol: http
        path: /swagger-ui.html
        enabled: true
    spring:
        mvc:
            static-path-pattern: /swagger*
#logging:
#    level:
#        root: DEBUG
#        org.springframework.security: DEBUG
#        org.springframework.web: DEBUG
#        org.springframework.boot: DEBUG
#        org.springframework.security.oauth2: DEBUG
#        org.springframework.security.oauth2.client: DEBUG
#        org.springframework.security.oauth2.client.endpoint: DEBUG
#        org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter: DEBUG
#        org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter.attemptAuthentication: DEBUG
#        org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter.successfulAuthentication: DEBUG
#        org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter.unsuccessfulAuthentication: DEBUG



